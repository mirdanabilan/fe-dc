{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mirda\\\\Documents\\\\Study\\\\ReactJS\\\\Project\\\\fe-dc\\\\src\\\\components\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport { register } from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"This field can't be empty!\"),\n    email: Yup.string().email(\"This is not a valid email!\").required(\"This filed can't be empty!\"),\n    password: Yup.string().test(\"len\", \"Password must be between 6-20 characters!\", val => val && val.toString().length >= 6 && val.toString().length <= 40).required(\"This filed can't be empty!\")\n  });\n\n  const handleRegister = formValue => {\n    const {\n      name,\n      email,\n      password\n    } = formValue;\n    register(name, email, password).then(response => {\n      setMessage(response.data.message);\n      setSuccessful(true);\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setMessage(resMessage);\n      setSuccessful(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleRegister,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"firstName\",\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"firstName\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"MOhJyrVGVBQLlw6kPn/dYJf4rVU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Mirda/Documents/Study/ReactJS/Project/fe-dc/src/components/Register.tsx"],"names":["React","useState","Formik","Field","Form","ErrorMessage","Yup","register","Link","Register","successful","setSuccessful","message","setMessage","initialValues","name","email","password","validationSchema","object","shape","string","required","test","val","toString","length","handleRegister","formValue","then","response","data","error","resMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Formik, Field, Form, ErrorMessage, yupToFormErrors} from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport IUser from \"../types/user.type\";\r\nimport {register} from \"../services/auth.service\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Register: React.FC = () => {\r\n\r\n    const [successful, setSuccessful] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n\r\n    const initialValues: IUser = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(\"This field can't be empty!\"),\r\n        email: Yup.string()\r\n                  .email(\"This is not a valid email!\")\r\n                  .required(\"This filed can't be empty!\"),\r\n        password: Yup.string()\r\n                     .test(\r\n                         \"len\",\r\n                         \"Password must be between 6-20 characters!\",\r\n                         (val:any) =>\r\n                          val &&\r\n                          val.toString().length >= 6 &&\r\n                          val.toString().length <= 40\r\n                     ).required(\"This filed can't be empty!\")\r\n    });\r\n\r\n    const handleRegister = (formValue: IUser) => {\r\n        const {name, email, password} = formValue;\r\n        register(name, email, password)\r\n        .then((response) => {\r\n            setMessage(response.data.message);\r\n            setSuccessful(true);\r\n        }, (error) => {\r\n            const resMessage =\r\n            (error.response && \r\n             error.response.data && \r\n             error.response.data.message) ||\r\n             error.message ||\r\n             error.toString();\r\n             setMessage(resMessage);\r\n             setSuccessful(false);\r\n            }   \r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"card card-container\">\r\n                <img \r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"/>\r\n                <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleRegister}\r\n                    >\r\n                    <Form>\r\n                        <div>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <Field \r\n                                name=\"firstName\" \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                            />\r\n                            <ErrorMessage \r\n                                name=\"firstName\" \r\n                                component=\"div\"\r\n                                className=\"alert alert-danger\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <Field \r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                className=\"form-control\"\r\n                            />\r\n                            <ErrorMessage \r\n                                name=\"email\" \r\n                                component=\"div\"\r\n                                className=\"alert alert-danger\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Field \r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                className=\"form-control\"\r\n                            />\r\n                            <ErrorMessage \r\n                                name=\"password\" \r\n                                component=\"div\"\r\n                                className=\"alert alert-danger\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" \r\n                                    className=\"btn btn-primary btn-block\">\r\n                                <span>Register</span>\r\n                            </button>\r\n                        </div>\r\n                        {message && (\r\n                            <div className=\"form-group\">\r\n                            <div className={\r\n                                    successful ? \"alert alert-success\" : \"alert alert-danger\"} \r\n                                 role=\"alert\"\r\n                            >\r\n                                {message}\r\n                             </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                    </Formik>\r\n                    <p>\r\n                        Already have an account? <Link to={\"/login\"}>Login Here!</Link>\r\n                    </p>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}; export default Register;"]},"metadata":{},"sourceType":"module"}