{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mirda\\\\Documents\\\\Study\\\\ReactJS\\\\Project\\\\fe-dc\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { login } from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  //hooks\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\"); //menentukan type dan initial value\n\n  const initialValues = {\n    // initial state nya username dan password\n    email: \"\",\n    password: \"\"\n  }; // menentukan field yang wajib diisi\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required(\"This field can't be empty!\"),\n    password: Yup.string().required(\"This filed can't be empty!\")\n  });\n\n  const handleLogin = formValue => {\n    const {\n      email,\n      password\n    } = formValue;\n    setMessage(\"\");\n    setLoading(true);\n    login(email, password).then(() => {\n      history.push(\"/profile\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setMessage(resMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\",\n        style: {\n          alignItems: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleLogin,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"E-mail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"email\",\n                  type: \"email\",\n                  className: \"form-control form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"password\",\n                  type: \"password\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                disabled: loading,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-text\",\n              children: [\"Don't have an account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Register Here!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"aahTtd7vobzsyrQXSpsjHR+FvKo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Mirda/Documents/Study/ReactJS/Project/fe-dc/src/components/Login.tsx"],"names":["React","useState","Formik","Field","Form","ErrorMessage","Yup","login","Link","Login","history","loading","setLoading","message","setMessage","initialValues","email","password","validationSchema","object","shape","string","required","handleLogin","formValue","then","push","window","location","reload","error","resMessage","response","data","toString","alignItems"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { login } from \"../services/auth.service\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./css/form.css\"\r\n\r\ninterface RouterProps {\r\n    history: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\nconst Login: React.FC<Props> = ({history}) => {\r\n    \r\n    //hooks\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n\r\n    //menentukan type dan initial value\r\n    const initialValues: {\r\n        // type nya username dan password\r\n        email: string;\r\n        password: string;\r\n    } = {\r\n        // initial state nya username dan password\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    // menentukan field yang wajib diisi\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().required(\"This field can't be empty!\"),\r\n        password: Yup.string().required(\"This filed can't be empty!\")\r\n    });\r\n\r\n    const handleLogin = (\r\n        formValue: {\r\n            email:string;\r\n            password:string;\r\n        }) => {\r\n            const {email, password} = formValue;\r\n            setMessage(\"\");\r\n            setLoading(true);\r\n            login(email, password).then(\r\n                () => {\r\n                    history.push(\"/profile\")\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    const resMessage =\r\n                    (error.response && \r\n                     error.response.data && \r\n                     error.response.data.message) ||\r\n                     error.message ||\r\n                     error.toString();\r\n                     setLoading(false);\r\n                     setMessage(resMessage);\r\n                }\r\n            );\r\n        };\r\n        return(\r\n            <div>\r\n                <div className=\"login-card\">\r\n                    <img \r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                        style={{alignItems:'center'}}/>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                    <Form>\r\n                        <div className=\"form-card\">\r\n                            <div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"email\">E-mail</label>\r\n                                    <Field \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"form-control form-input\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"email\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Field \r\n                                        name=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"password\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    disabled={loading}>\r\n                                    <span>Login</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"form-text\">\r\n                                Don't have an account yet? <Link to={\"/register\"}>Register Here!</Link>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {message && (\r\n                            <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                             </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>  \r\n        );\r\n}; export default Login;"]},"metadata":{},"sourceType":"module"}