[{"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\index.tsx":"1","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\App.tsx":"2","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\reportWebVitals.ts":"3","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Login.tsx":"4","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Register.tsx":"5","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\auth.service.ts":"6","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Profile.tsx":"7","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Home.tsx":"8","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\common\\EventBus.tsx":"9","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\user.service.ts":"10","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\auth-header.ts":"11","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\tourist.service.ts":"12","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Tourist-det.tsx":"13"},{"size":517,"mtime":1648819084657,"results":"14","hashOfConfig":"15"},{"size":3516,"mtime":1649066595803,"results":"16","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":5581,"mtime":1649013110485,"results":"18","hashOfConfig":"15"},{"size":6259,"mtime":1649016618444,"results":"19","hashOfConfig":"15"},{"size":895,"mtime":1648971523933,"results":"20","hashOfConfig":"15"},{"size":2843,"mtime":1649073614422,"results":"21","hashOfConfig":"15"},{"size":846,"mtime":1648966804525,"results":"22","hashOfConfig":"15"},{"size":415,"mtime":1648921877663,"results":"23","hashOfConfig":"15"},{"size":337,"mtime":1648918295558,"results":"24","hashOfConfig":"15"},{"size":517,"mtime":1648977320916,"results":"25","hashOfConfig":"15"},{"size":369,"mtime":1649050023709,"results":"26","hashOfConfig":"15"},{"size":757,"mtime":1649060670543,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"f0d3ag",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\index.tsx",[],[],["71","72"],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\App.tsx",["73"],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Login.tsx",["74","75"],[],"import React, {useState} from 'react';\r\nimport \"./css/form.css\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { login } from \"../services/auth.service\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\ninterface RouterProps {\r\n    history: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\nconst Login: React.FC<Props> = ({history}) => {\r\n    \r\n    //hooks\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n\r\n    //menentukan type dan initial value\r\n    const initialValues: {\r\n        // type nya username dan password\r\n        email: string;\r\n        password: string;\r\n    } = {\r\n        // initial state nya username dan password\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    // menentukan field yang wajib diisi\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().required(\"This field can't be empty!\"),\r\n        password: Yup.string().required(\"This filed can't be empty!\")\r\n    });\r\n\r\n    const handleLogin = (\r\n        formValue: {\r\n            email:string;\r\n            password:string;\r\n        }) => {\r\n            const {email, password} = formValue;\r\n            setMessage(\"\");\r\n            setLoading(true);\r\n            login(email, password).then(\r\n                () => {\r\n                    history.push(\"/profile\")\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    const resMessage =\r\n                    (error.response && \r\n                     error.response.data && \r\n                     error.response.data.message) ||\r\n                     error.message ||\r\n                     error.toString();\r\n                     setLoading(false);\r\n                     setMessage(resMessage);\r\n                }\r\n            );\r\n        };\r\n        return(\r\n            <div className=\"login-body\">\r\n                <div style={{marginTop:180}}>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                    <Form className=\"form-card\">\r\n                        <div className=\"login-card\">\r\n                            <div>\r\n                                <div className=\"form-img\">\r\n                                    <img \r\n                                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                                        alt=\"profile-img\"\r\n                                        className=\"profile-img-card\"\r\n                                    />\r\n                                </div>\r\n                                <div className='form-title'>\r\n                                    <p>Log In</p>\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"email\">E-mail</label>\r\n                                    <Field \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"form-control form-input\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"email\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Field \r\n                                        name=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"password\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    disabled={loading}>\r\n                                    <span>Login</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"form-text\">\r\n                                Don't have an account yet? <Link to={\"/register\"}>Register Here!</Link>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {message && (\r\n                            <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                             </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>  \r\n        );\r\n}; export default Login;","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Register.tsx",["76","77","78"],[],"import React, {useState} from 'react';\r\nimport \"./css/form.css\"\r\nimport {Formik, Field, Form, ErrorMessage, yupToFormErrors} from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport IUser from \"../types/user.type\";\r\nimport {register} from \"../services/auth.service\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Register: React.FC = () => {\r\n\r\n    const [successful, setSuccessful] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n\r\n    const initialValues: IUser = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(\"This field can't be empty!\"),\r\n        email: Yup.string()\r\n                  .email(\"This is not a valid email!\")\r\n                  .required(\"This filed can't be empty!\"),\r\n        password: Yup.string()\r\n                     .test(\r\n                         \"len\",\r\n                         \"Password must be between 6-20 characters!\",\r\n                         (val:any) =>\r\n                          val &&\r\n                          val.toString().length >= 6 &&\r\n                          val.toString().length <= 40\r\n                     ).required(\"This filed can't be empty!\")\r\n    });\r\n\r\n    const handleRegister = (formValue: IUser) => {\r\n        const {name, email, password} = formValue;\r\n        register(name, email, password)\r\n        .then((response) => {\r\n            setMessage(response.data.message);\r\n            setSuccessful(true);\r\n        }, (error) => {\r\n            const resMessage =\r\n            (error.response && \r\n             error.response.data && \r\n             error.response.data.message) ||\r\n             error.message ||\r\n             error.toString();\r\n             setMessage(resMessage);\r\n             setSuccessful(false);\r\n            }   \r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"login-body\">\r\n            <div style={{marginTop:180}}>\r\n                <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleRegister}\r\n                    >\r\n                    <Form className=\"form-card\">\r\n                        <div className=\"login-card\">\r\n                            <div>\r\n                                <div className=\"form-img\">\r\n                                    <img \r\n                                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                                        alt=\"profile-img\"\r\n                                        className=\"profile-img-card\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-title'>\r\n                                    <p>Register</p>\r\n                                </div>\r\n\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <Field \r\n                                        name=\"firstName\" \r\n                                        type=\"text\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"firstName\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"email\">E-mail</label>\r\n                                    <Field \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"email\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Field \r\n                                        name=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage \r\n                                        name=\"password\" \r\n                                        component=\"div\"\r\n                                        className=\"alert alert-danger\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" \r\n                                        className=\"btn btn-primary btn-block\">\r\n                                    <Link to={\"/login\"} style={{color:\"white\"}}>Register</Link>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"form-text\">\r\n                                Already have an account? <Link to={\"/login\"}>Login Here!</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {message && (\r\n                            <div className=\"form-group\">\r\n                            <div className={\r\n                                    successful ? \"alert alert-success\" : \"alert alert-danger\"} \r\n                                 role=\"alert\">\r\n                                {message}\r\n                             </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                    </Formik>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}; export default Register;","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\auth.service.ts",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Profile.tsx",["79","80","81","82"],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Home.tsx",["83","84","85","86"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getPublicContent } from \"../services/user.service\";\r\n\r\nconst Home: React.FC = () => {\r\n    \r\n    const [content, setContent] = useState<string>(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     getPublicContent().then(\r\n    //       (response) => {\r\n    //         setContent(response.data);\r\n    //       },\r\n    //       (error) => {\r\n    //         const _content =\r\n    //           (error.response && error.response.data) ||\r\n    //           error.message ||\r\n    //           error.toString();\r\n    \r\n    //         setContent(_content);\r\n    //       }\r\n    //     );\r\n    //   }, []);\r\n\r\n      return (\r\n        <div className=\"container\">\r\n          <header className=\"jumbotron\">\r\n            <h3>Home</h3>\r\n          </header>\r\n        </div>\r\n      );\r\n}; export default Home;","C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\common\\EventBus.tsx",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\user.service.ts",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\auth-header.ts",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\services\\tourist.service.ts",[],[],"C:\\Users\\Mirda\\Documents\\Study\\ReactJS\\Project\\fe-dc\\src\\components\\Tourist-det.tsx",["87","88"],[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":25,"nodeType":"95","messageId":"96","endLine":3,"endColumn":29},{"ruleId":"93","severity":1,"message":"97","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":7,"column":18,"nodeType":"95","messageId":"96","endLine":7,"endColumn":23},{"ruleId":"93","severity":1,"message":"99","line":3,"column":44,"nodeType":"95","messageId":"96","endLine":3,"endColumn":59},{"ruleId":"93","severity":1,"message":"97","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":7,"column":18,"nodeType":"95","messageId":"96","endLine":7,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":9,"column":10,"nodeType":"95","messageId":"96","endLine":9,"endColumn":26},{"ruleId":"93","severity":1,"message":"101","line":19,"column":12,"nodeType":"95","messageId":"96","endLine":19,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":29,"column":16,"nodeType":"95","messageId":"96","endLine":29,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":39,"column":21,"nodeType":"105","endLine":39,"endColumn":61},{"ruleId":"93","severity":1,"message":"106","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"107","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"108","line":6,"column":12,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"109","line":6,"column":21,"nodeType":"95","messageId":"96","endLine":6,"endColumn":31},{"ruleId":"93","severity":1,"message":"110","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":17,"column":17,"nodeType":"105","endLine":17,"endColumn":64},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'yupToFormErrors' is defined but never used.","'setConstantValue' is defined but never used.","'page' is assigned a value but never used.","'listPage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'getPublicContent' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'internal' is defined but never used.","no-global-assign","no-unsafe-negation"]